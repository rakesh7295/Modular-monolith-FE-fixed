{"ast":null,"code":"var _jsxFileName = \"/root/modular-monolith-with-ddd-fe-react/src/meetings/create-meeting.tsx\";\nimport { useState } from 'react';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { HttpClient } from '../shared/http-client';\nexport function CreateMeeting() {\n  const {\n    meetingGroupId\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [termStartDate, setTermStartDate] = useState(new Date());\n  const [termEndDate, setTermEndDate] = useState(new Date());\n  const [description, setDescription] = useState('');\n  const [meetingLocationName, setMeetingLocationName] = useState('');\n  const [meetingLocationAddress, setMeetingLocationAddress] = useState('');\n  const [meetingLocationPostalCode, setMeetingLocationPostalCode] = useState('');\n  const [meetingLocationCity, setMeetingLocationCity] = useState('');\n  const [attendeesLimit, setAttendeesLimit] = useState();\n  const [guestsLimit, setGuestsLimit] = useState(0);\n  const [RSVPTermStartDate, setRSVPTermStartDate] = useState(new Date());\n  const [rsvpTermEndDate, setRSVPTermEndDate] = useState(new Date());\n  const [eventFeeValue] = useState();\n\n  function handleSubmit(event) {\n    const request = {\n      meetingGroupId: meetingGroupId,\n      description: description,\n      eventFeeCurrency: '',\n      guestsLimit: guestsLimit,\n      hostMemberIds: [],\n      meetingLocationAddress: meetingLocationAddress,\n      meetingLocationCity: meetingLocationCity,\n      meetingLocationName: meetingLocationName,\n      meetingLocationPostalCode: meetingLocationPostalCode,\n      rsvpTermEndDate: rsvpTermEndDate,\n      rsvpTermStartDate: RSVPTermStartDate,\n      termEndDate: termEndDate,\n      termStartDate: termStartDate,\n      title: title,\n      attendeesLimit: attendeesLimit,\n      eventFeeValue: eventFeeValue\n    };\n    HttpClient.post('api/meetings/meetings', JSON.stringify(request)).then(() => afterSubmit()).catch(_ => {});\n    event.preventDefault();\n  }\n\n  function afterSubmit() {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Create Meeting\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Title: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: event => setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    value: description,\n    onChange: event => setDescription(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: meetingLocationName,\n    onChange: event => setMeetingLocationName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Address: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: meetingLocationAddress,\n    onChange: event => setMeetingLocationAddress(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 46\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Postal code: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: meetingLocationPostalCode,\n    onChange: event => setMeetingLocationPostalCode(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"City: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: meetingLocationCity,\n    onChange: event => setMeetingLocationCity(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Start date: \", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: termStartDate,\n    onChange: date => setTermStartDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"End date:\", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: termEndDate,\n    onChange: date => setTermEndDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"RSVP start date: \", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: RSVPTermStartDate,\n    onChange: date => setRSVPTermStartDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"RSVP end date: \", /*#__PURE__*/React.createElement(DatePicker, {\n    selected: rsvpTermEndDate,\n    onChange: date => setRSVPTermEndDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Attendees limit \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: attendeesLimit,\n    onChange: event => setAttendeesLimit(Number.parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Guests limit \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: guestsLimit,\n    onChange: event => setGuestsLimit(Number.parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send Proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 26\n    }\n  })))));\n}","map":{"version":3,"sources":["/root/modular-monolith-with-ddd-fe-react/src/meetings/create-meeting.tsx"],"names":["useState","React","useParams","DatePicker","HttpClient","CreateMeeting","meetingGroupId","title","setTitle","termStartDate","setTermStartDate","Date","termEndDate","setTermEndDate","description","setDescription","meetingLocationName","setMeetingLocationName","meetingLocationAddress","setMeetingLocationAddress","meetingLocationPostalCode","setMeetingLocationPostalCode","meetingLocationCity","setMeetingLocationCity","attendeesLimit","setAttendeesLimit","guestsLimit","setGuestsLimit","RSVPTermStartDate","setRSVPTermStartDate","rsvpTermEndDate","setRSVPTermEndDate","eventFeeValue","handleSubmit","event","request","eventFeeCurrency","hostMemberIds","rsvpTermStartDate","post","JSON","stringify","then","afterSubmit","catch","_","preventDefault","target","value","date","Number","parseInt"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from 'react';\nimport React from 'react';\nimport {\n    useParams\n} from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { HttpClient } from '../shared/http-client';\n\ninterface CreateMeetingRequest {\n    meetingGroupId: string,\n    title: string,\n    termStartDate: Date,\n    termEndDate: Date,\n    description: string,\n    meetingLocationName: string,\n    meetingLocationAddress: string,\n    meetingLocationPostalCode: string,\n    meetingLocationCity: string,\n    attendeesLimit?: number,\n    guestsLimit: number,\n    rsvpTermStartDate?: Date,\n    rsvpTermEndDate?: Date,\n    eventFeeValue?: number,\n    eventFeeCurrency: string,\n    hostMemberIds: string[]\n}\n\ninterface CreateMeetingUrlParams {\n    meetingGroupId: string;\n  }\n\nexport function CreateMeeting() {\n\n    const { meetingGroupId } = useParams<CreateMeetingUrlParams>();\n\n    const [title, setTitle] = useState('');\n    const [termStartDate, setTermStartDate] = useState<any>(new Date());\n    const [termEndDate, setTermEndDate] = useState<any>(new Date());\n    const [description, setDescription] = useState('');\n    const [meetingLocationName, setMeetingLocationName] = useState('');\n    const [meetingLocationAddress, setMeetingLocationAddress] = useState('');\n    const [meetingLocationPostalCode, setMeetingLocationPostalCode] = useState('');\n    const [meetingLocationCity, setMeetingLocationCity] = useState('');\n    const [attendeesLimit, setAttendeesLimit] = useState<number | undefined>();\n    const [guestsLimit, setGuestsLimit] = useState<number>(0);\n    const [RSVPTermStartDate, setRSVPTermStartDate] = useState<any>(new Date());\n    const [rsvpTermEndDate, setRSVPTermEndDate] = useState<any>(new Date());\n    const [eventFeeValue] = useState<number | undefined>();\n\n\n    function handleSubmit(event: FormEvent<HTMLFormElement>) {\n        const request: CreateMeetingRequest = {\n            meetingGroupId: meetingGroupId,\n            description: description,\n            eventFeeCurrency: '',\n            guestsLimit: guestsLimit,\n            hostMemberIds: [],\n            meetingLocationAddress: meetingLocationAddress,\n            meetingLocationCity: meetingLocationCity,\n            meetingLocationName: meetingLocationName,\n            meetingLocationPostalCode: meetingLocationPostalCode,\n            rsvpTermEndDate: rsvpTermEndDate,\n            rsvpTermStartDate: RSVPTermStartDate,\n            termEndDate: termEndDate,\n            termStartDate: termStartDate,\n            title: title,\n            attendeesLimit: attendeesLimit,\n            eventFeeValue: eventFeeValue\n        }\n\n        HttpClient.post<any>('api/meetings/meetings', JSON.stringify(request))\n            .then(() => afterSubmit())\n            .catch(_ => { });\n\n        event.preventDefault();\n    }\n\n    \n    function afterSubmit() {\n\n    }\n\n\n    return (\n        <div className=\"container\">\n            Create Meeting\n            \n            <form onSubmit={handleSubmit}>\n                <div>\n                    <div>Title: </div><div><input type=\"text\" value={title} onChange={event => setTitle(event.target.value)} /></div>\n                    <div>Description: </div><div><input type=\"textarea\" value={description} onChange={event => setDescription(event.target.value)} /></div>\n                    <div>Name: </div><div><input type=\"text\" value={meetingLocationName} onChange={event => setMeetingLocationName(event.target.value)} /></div>\n                    <div>Address: </div><div><input type=\"text\" value={meetingLocationAddress} onChange={event => setMeetingLocationAddress(event.target.value)} /></div>\n                    <div>Postal code: </div><div><input type=\"text\" value={meetingLocationPostalCode} onChange={event => setMeetingLocationPostalCode(event.target.value)} /></div>\n                    <div>City: </div><div><input type=\"text\" value={meetingLocationCity} onChange={event => setMeetingLocationCity(event.target.value)} /></div>\n                    <div>Start date: <DatePicker selected={termStartDate} onChange={date => setTermStartDate(date)} /></div>\n                    <div>End date:<DatePicker selected={termEndDate} onChange={date => setTermEndDate(date)} /></div>\n                    <div>RSVP start date: <DatePicker selected={RSVPTermStartDate} onChange={date => setRSVPTermStartDate(date)} /></div>\n                    <div>RSVP end date: <DatePicker selected={rsvpTermEndDate} onChange={date => setRSVPTermEndDate(date)} /></div>\n                    \n                    <div>Attendees limit <input type=\"number\" value={attendeesLimit} onChange={event => setAttendeesLimit(Number.parseInt(event.target.value))} /></div>\n                    <div>Guests limit <input type=\"number\" value={guestsLimit} onChange={event => setGuestsLimit(Number.parseInt(event.target.value))} /></div>\n                    <div><input type=\"submit\" value=\"Send Proposal\" /></div>\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}