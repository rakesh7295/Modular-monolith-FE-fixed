{"ast":null,"code":"var _jsxFileName = \"/root/modular-monolith-with-ddd-fe-react/src/meetings/meeting-attendees-list.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { AuthenticationService } from '../login/authentication/authentication-service';\nimport { HttpClient } from '../shared/http-client';\nexport function MeetingAttendeesList(props) {\n  const [meetingAttendees, setMeetingAttendees] = useState([]);\n  useEffect(() => {\n    function loadMeetingAttendees() {\n      HttpClient.get(`api/meetings/meetings/${props.meetingId}/attendees`).then(response => setMeetingAttendees(response));\n    }\n\n    loadMeetingAttendees();\n  }, [props.meetingId]);\n  /*\n      function loadMeetingAttendees() {\n          HttpClient.get<Array<MeetingAttendee>>(`api/meetings/meetings/${props.meetingId}/attendees`)\n              .then(response => setMeetingAttendees(response));\n      }\n  */\n\n  function isAuthenticatedUserAnAttendee() {\n    const userId = AuthenticationService.getUserId();\n    const meetingAttendee = meetingAttendees.find(x => x.attendeeId == userId);\n    return meetingAttendee !== undefined;\n  }\n\n  function attendOnClick() {\n    const data = {\n      guestsNumber: 0\n    };\n\n    function loadMeetingAttendees() {\n      HttpClient.get(`api/meetings/meetings/${props.meetingId}/attendees`).then(response => setMeetingAttendees(response));\n    }\n\n    HttpClient.post(`api/meetings/meetings/${props.meetingId}/attendees`, JSON.stringify(data)).then(() => loadMeetingAttendees());\n  }\n\n  function withdrawParticipationOnClick() {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Guests number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Decision date\")), meetingAttendees.map(item => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, item.firstName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, item.lastName, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, item.roleCode, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, item.guestsNumber, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, item.decisionDate, \" \")))), !isAuthenticatedUserAnAttendee() && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => attendOnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Attend\"), isAuthenticatedUserAnAttendee() && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => withdrawParticipationOnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Withdraw participation\"));\n}","map":{"version":3,"sources":["/root/modular-monolith-with-ddd-fe-react/src/meetings/meeting-attendees-list.tsx"],"names":["React","useEffect","useState","AuthenticationService","HttpClient","MeetingAttendeesList","props","meetingAttendees","setMeetingAttendees","loadMeetingAttendees","get","meetingId","then","response","isAuthenticatedUserAnAttendee","userId","getUserId","meetingAttendee","find","x","attendeeId","undefined","attendOnClick","data","guestsNumber","post","JSON","stringify","withdrawParticipationOnClick","map","item","firstName","lastName","roleCode","decisionDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AuthenticationService } from '../login/authentication/authentication-service';\nimport { HttpClient } from '../shared/http-client';\n\ninterface MeetingAttendee {\n    firstName: string,\n    lastName: string,\n    attendeeId: string,\n    roleCode: string,\n    guestsNumber: string,\n    decisionDate: string\n}\n\ninterface AddMeetingAttendeeRequest {\n    guestsNumber: number\n}\n\nexport interface MeetingAttendeeListProperties {\n    meetingId: string\n}\n\nexport function MeetingAttendeesList(props: MeetingAttendeeListProperties) {\n\n    const [meetingAttendees, setMeetingAttendees] = useState<Array<MeetingAttendee>>([]);\n\n    useEffect(() => {\n    function loadMeetingAttendees() {\n        HttpClient.get<Array<MeetingAttendee>>(`api/meetings/meetings/${props.meetingId}/attendees`)\n            .then(response => setMeetingAttendees(response));\n    }\n\n        loadMeetingAttendees();\n    }, [props.meetingId]);\n/*\n    function loadMeetingAttendees() {\n        HttpClient.get<Array<MeetingAttendee>>(`api/meetings/meetings/${props.meetingId}/attendees`)\n            .then(response => setMeetingAttendees(response));\n    }\n*/\n    function isAuthenticatedUserAnAttendee(): boolean {\n        const userId = AuthenticationService.getUserId();\n\n        const meetingAttendee = meetingAttendees.find(x => x.attendeeId == userId);\n\n        return meetingAttendee !== undefined;\n    }\n\n    function attendOnClick(): void {\n        const data: AddMeetingAttendeeRequest = {\n            guestsNumber: 0\n        }\n    function loadMeetingAttendees() {\n        HttpClient.get<Array<MeetingAttendee>>(`api/meetings/meetings/${props.meetingId}/attendees`)\n            .then(response => setMeetingAttendees(response));\n    }\n\n\n        HttpClient.post(`api/meetings/meetings/${props.meetingId}/attendees`, JSON.stringify(data))\n            .then(() => loadMeetingAttendees());\n    }\n\n    function withdrawParticipationOnClick(): void {\n\n    }\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <th>First name</th>\n                    <th>Last name</th>\n                    <th>Role</th>\n                    <th>Guests number</th>\n                    <th>Decision date</th>\n                </thead>\n\n                {meetingAttendees.map(item =>\n                    <tbody>\n                        <td>{item.firstName} </td>\n                        <td>{item.lastName} </td>\n                        <td>{item.roleCode} </td>\n                        <td>{item.guestsNumber} </td>\n                        <td>{item.decisionDate} </td>\n                    </tbody>\n                )}\n\n            </table>\n\n            {!isAuthenticatedUserAnAttendee() &&\n                <button onClick={() => attendOnClick()}>Attend</button>\n            }\n\n            {isAuthenticatedUserAnAttendee() &&\n                <button onClick={() => withdrawParticipationOnClick()}>Withdraw participation</button>\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}