{"ast":null,"code":"var _jsxFileName = \"/root/modular-monolith-with-ddd-fe-react/src/login/login-form.tsx\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { AuthenticationService } from \"./authentication/authentication-service\";\nimport { HttpClient } from \"../shared/http-client\";\nexport function LoginForm(props) {\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  function handleSubmit(event) {\n    var formdata = new FormData();\n    formdata.append(\"client_id\", \"ro.client\");\n    formdata.append(\"grant_type\", \"password\");\n    formdata.append(\"username\", login);\n    formdata.append(\"client_secret\", \"secret\");\n    formdata.append(\"password\", password);\n    HttpClient.postForm(\"connect/token\", formdata).then(data => AuthenticationService.authenticate(data, login)).then(() => props.onSuccessfulLoginEvent()).catch(() => {\n      setErrorMessage('Invalid username or password');\n      setPassword('');\n    });\n    event.preventDefault();\n  }\n\n  function handleLoginChange(event) {\n    setLogin(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, errorMessage !== null && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Login: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: login,\n    onChange: handleLoginChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    autoComplete: \"password\",\n    value: password,\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Log in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  })))));\n}","map":{"version":3,"sources":["/root/modular-monolith-with-ddd-fe-react/src/login/login-form.tsx"],"names":["useState","React","AuthenticationService","HttpClient","LoginForm","props","login","setLogin","password","setPassword","errorMessage","setErrorMessage","handleSubmit","event","formdata","FormData","append","postForm","then","data","authenticate","onSuccessfulLoginEvent","catch","preventDefault","handleLoginChange","target","value","handlePasswordChange"],"mappings":";AAAA,SAAiCA,QAAjC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,qBAAT,QAAsC,yCAAtC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAQA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAgB,IAAhB,CAAhD;;AAEA,WAASY,YAAT,CAAsBC,KAAtB,EAAyD;AAErD,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,WAA7B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,UAA9B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BV,KAA5B;AACAQ,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,QAAjC;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BR,QAA5B;AAEAL,IAAAA,UAAU,CAACc,QAAX,CAA0C,eAA1C,EAA2DH,QAA3D,EACKI,IADL,CACUC,IAAI,IAAIjB,qBAAqB,CAACkB,YAAtB,CAAmCD,IAAnC,EAAyCb,KAAzC,CADlB,EAEKY,IAFL,CAEU,MAAMb,KAAK,CAACgB,sBAAN,EAFhB,EAGKC,KAHL,CAGW,MAAM;AACTX,MAAAA,eAAe,CAAC,8BAAD,CAAf;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KANL;AAUAI,IAAAA,KAAK,CAACU,cAAN;AACH;;AAED,WAASC,iBAAT,CAA2BX,KAA3B,EAAiE;AAC7DN,IAAAA,QAAQ,CAACM,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAR;AACH;;AAED,WAASC,oBAAT,CAA8Bd,KAA9B,EAAoE;AAChEJ,IAAAA,WAAW,CAACI,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAX;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,YAAY,KAAK,IAAjB,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,YAAN,CAFR,eAKI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEN,KAA1B;AAAiC,IAAA,QAAQ,EAAEkB,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADtB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAEyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,YAAY,EAAC,UAApC;AAA+C,IAAA,KAAK,EAAEhB,QAAtD;AAAgE,IAAA,QAAQ,EAAEmB,oBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFzB,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAHJ,CADJ,CALJ,CADJ;AAeH","sourcesContent":["import { ChangeEvent, FormEvent, useState } from \"react\";\nimport React from \"react\";\nimport { AuthenticationResult } from \"./authentication/authenticationResult\";\nimport { AuthenticationService } from \"./authentication/authentication-service\";\nimport { HttpClient } from \"../shared/http-client\";\n\ntype LoginFormProps = {\n    onSuccessfulLoginEvent(): void\n}\n\n\n\nexport function LoginForm(props: LoginFormProps) {\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n    function handleSubmit(event: FormEvent<HTMLFormElement>) {\n\n        var formdata = new FormData();\n        formdata.append(\"client_id\", \"ro.client\");\n        formdata.append(\"grant_type\", \"password\");\n        formdata.append(\"username\", login);\n        formdata.append(\"client_secret\", \"secret\");\n        formdata.append(\"password\", password);\n\n        HttpClient.postForm<AuthenticationResult>(\"connect/token\", formdata)\n            .then(data => AuthenticationService.authenticate(data, login))\n            .then(() => props.onSuccessfulLoginEvent())\n            .catch(() => {\n                setErrorMessage('Invalid username or password');\n                setPassword('');\n            });\n\n\n\n        event.preventDefault();\n    }\n\n    function handleLoginChange(event: ChangeEvent<HTMLInputElement>) {\n        setLogin(event.target.value)\n    }\n\n    function handlePasswordChange(event: ChangeEvent<HTMLInputElement>) {\n        setPassword(event.target.value);\n    }\n\n    return (\n        <div>\n            {errorMessage !== null &&\n                <div>{errorMessage}</div>\n            }\n\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <div>Login: </div><div><input type=\"text\" value={login} onChange={handleLoginChange} /></div>\n                    <div>Password: </div><div><input type=\"password\" autoComplete=\"password\" value={password} onChange={handlePasswordChange} /></div>\n                    <div><input type=\"submit\" value=\"Log in\" /></div>\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}