{"ast":null,"code":"var _jsxFileName = \"/root/modular-monolith-with-ddd-fe-react/src/payments/subscriptions/subscription-buy.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { SubscriptionType } from './subscriptionType';\nimport { useHistory } from \"react-router-dom\";\nimport { HttpClient } from '../../shared/http-client';\n\nclass SubscriptionPrice {\n  constructor(valueMoney, currencyMoney) {\n    this.value = 0;\n    this.currency = '';\n    this.value = valueMoney;\n    this.currency = currencyMoney;\n  }\n\n}\n\nexport function SubscriptionBuy() {\n  const [typeCode, setTypeCode] = useState(SubscriptionType.MONTH);\n  const [countryCode, setCountryCode] = useState('PL');\n  const [price, setPrice] = useState(new SubscriptionPrice(0, ''));\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    loadCountries();\n  }, []);\n  useEffect(() => {\n    function getPrice() {\n      HttpClient.get(`api/payments/priceListItems?countryCode=${countryCode}&categoryCode=New&periodTypeCode=${typeCode}`).then(response => {\n        setPrice(new SubscriptionPrice(response.value, response.currency));\n      }).catch(_ => {});\n    }\n\n    getPrice();\n  }, []);\n  let history = useHistory();\n\n  function loadCountries() {\n    HttpClient.get('api/meetings/countries').then(response => setCountries(response)).catch(_ => {});\n  }\n  /*\n      function getPrice() {\n          HttpClient.get<MoneyValue>(`api/payments/priceListItems?countryCode=${countryCode}&categoryCode=New&periodTypeCode=${typeCode}`)\n              .then(response => {\n                  setPrice(new SubscriptionPrice(response.value, response.currency));\n              }).catch(_ => { });\n      }\n  */\n\n\n  function handleSubmit(event) {\n    const request = {\n      subscriptionTypeCode: typeCode,\n      countryCode: countryCode,\n      value: price.value,\n      currency: price.currency\n    };\n    HttpClient.post('api/payments/subscriptions', JSON.stringify(request)).then(response => response.json()).then(paymentId => history.push(`/subscription/payment-status?paymentId=${paymentId}`)).catch(_ => {});\n    event.preventDefault();\n  }\n\n  function handleCountryChange(event) {\n    setCountryCode(event.target.value);\n  }\n\n  function handlePeriodChange(event) {\n    setTypeCode(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Period: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"Period\",\n    onChange: handlePeriodChange,\n    onLoadedData: handlePeriodChange,\n    value: countryCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    label: \"Month\",\n    value: SubscriptionType.MONTH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    label: \"6 months\",\n    value: SubscriptionType.HALF_YEAR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Country: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"Country\",\n    onChange: handleCountryChange,\n    onLoadedData: handleCountryChange,\n    value: countryCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, countries.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    label: item.name,\n    value: item.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send Proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 26\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Price: \", price.value, \" \", price.currency));\n}","map":{"version":3,"sources":["/root/modular-monolith-with-ddd-fe-react/src/payments/subscriptions/subscription-buy.tsx"],"names":["React","useEffect","useState","SubscriptionType","useHistory","HttpClient","SubscriptionPrice","constructor","valueMoney","currencyMoney","value","currency","SubscriptionBuy","typeCode","setTypeCode","MONTH","countryCode","setCountryCode","price","setPrice","countries","setCountries","loadCountries","getPrice","get","then","response","catch","_","history","handleSubmit","event","request","subscriptionTypeCode","post","JSON","stringify","json","paymentId","push","preventDefault","handleCountryChange","target","handlePeriodChange","HALF_YEAR","map","item","name","code"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { Country } from '../../shared/country';\nimport { SubscriptionType } from './subscriptionType';\nimport { useHistory } from \"react-router-dom\";\nimport { HttpClient } from '../../shared/http-client';\n\ninterface BuySubscriptionRequest {\n    subscriptionTypeCode: string,\n    countryCode: string,\n    value: number,\n    currency: string\n}\n\ninterface MoneyValue {\n    value: number,\n    currency: string\n}\n\nclass SubscriptionPrice {\n\n    public value: number = 0;\n\n    public currency: string = '';\n\n    constructor(valueMoney: number, currencyMoney: string) {\n\n        this.value = valueMoney;\n        this.currency = currencyMoney;\n    }\n}\n\nexport function SubscriptionBuy() {\n\n    const [typeCode, setTypeCode,] = useState(SubscriptionType.MONTH);\n    const [countryCode, setCountryCode] = useState('PL');\n    const [price, setPrice] = useState<SubscriptionPrice>(new SubscriptionPrice(0, ''));\n    const [countries, setCountries] = useState<Array<Country>>([]);\n\n    useEffect(() => {\n        loadCountries();\n    }, []);\n\n    useEffect(() => {\n    function getPrice() {\n        HttpClient.get<MoneyValue>(`api/payments/priceListItems?countryCode=${countryCode}&categoryCode=New&periodTypeCode=${typeCode}`)\n            .then(response => {\n                setPrice(new SubscriptionPrice(response.value, response.currency));\n            }).catch(_ => { });\n    }\n\n        getPrice();\n    }, []);\n\n    let history = useHistory();\n\n    function loadCountries() {\n        HttpClient.get<Array<Country>>('api/meetings/countries')\n            .then(response => setCountries(response))\n            .catch(_ => { });\n    }\n/*\n    function getPrice() {\n        HttpClient.get<MoneyValue>(`api/payments/priceListItems?countryCode=${countryCode}&categoryCode=New&periodTypeCode=${typeCode}`)\n            .then(response => {\n                setPrice(new SubscriptionPrice(response.value, response.currency));\n            }).catch(_ => { });\n    }\n*/\n    function handleSubmit(event: FormEvent<HTMLFormElement>) {\n        const request: BuySubscriptionRequest = {\n            subscriptionTypeCode: typeCode,\n            countryCode: countryCode,\n            value: price.value,\n            currency: price.currency\n        }\n\n        HttpClient.post<Response>('api/payments/subscriptions', JSON.stringify(request))\n            .then((response) => response.json() as unknown as string)\n            .then((paymentId) => history.push(`/subscription/payment-status?paymentId=${paymentId}`))\n            .catch(_ => { });\n\n        event.preventDefault();\n    }\n\n    function handleCountryChange(event: ChangeEvent<HTMLSelectElement>) {\n        setCountryCode(event.target.value);\n    }\n\n    function handlePeriodChange(event: ChangeEvent<HTMLSelectElement>) {\n        setTypeCode(event.target.value);\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <div>Period: </div>\n                    <div>\n                        <select name=\"Period\"\n                            onChange={handlePeriodChange}\n                            onLoadedData={handlePeriodChange}\n                            value={countryCode}>\n                            <option label=\"Month\" value={SubscriptionType.MONTH}></option>\n                            <option label=\"6 months\" value={SubscriptionType.HALF_YEAR}></option>\n                        </select>\n                    </div>\n                    <div>Country: </div>\n                    <div>\n                        <select name=\"Country\"\n                            onChange={handleCountryChange}\n                            onLoadedData={handleCountryChange}\n                            value={countryCode}>\n                            {countries.map(item =>\n                                <option label={item.name} value={item.code}></option>)}\n                        </select>\n                    </div>\n                    <div><input type=\"submit\" value=\"Send Proposal\" /></div>\n                </div>\n            </form>\n            <div>\n                Price: {price.value} {price.currency}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}