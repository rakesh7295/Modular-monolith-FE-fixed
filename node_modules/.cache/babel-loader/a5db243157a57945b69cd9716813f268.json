{"ast":null,"code":"var _jsxFileName = \"/root/modular-monolith-with-ddd-fe-react/src/meetings/my-meeting-groups/create-meeting-group.tsx\";\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport { HttpClient } from '../../shared/http-client';\nexport function CreateMeetingGroup() {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [city, setCity] = useState('');\n  const [countryCode, setCountryCode] = useState('PL');\n  const [isProposalSent, setIsProposalSent] = useState(false);\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    loadCountries();\n  }, []);\n\n  function loadCountries() {\n    HttpClient.get('api/meetings/countries').then(response => setCountries(response));\n  }\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n  }\n\n  function handleDescriptionChange(event) {\n    setDescription(event.target.value);\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    const request = {\n      locationCity: city,\n      locationCountryCode: countryCode,\n      description: description,\n      name: name\n    };\n    HttpClient.post('api/meetings/MeetingGroupProposals', JSON.stringify(request)).then(() => setIsProposalSent(true)).catch(_ => {});\n    event.preventDefault();\n  }\n\n  function handleCountryChange(event) {\n    setCountryCode(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Create Meeting group\", !isProposalSent && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"textarea\",\n    value: description,\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"City: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: city,\n    onChange: handleCityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 43\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Country: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"Country\",\n    onChange: handleCountryChange,\n    onLoadedData: handleCountryChange,\n    value: countryCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, countries.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    label: item.name,\n    value: item.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send Proposal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }\n  })))), isProposalSent && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Proposal sent\"));\n}","map":{"version":3,"sources":["/root/modular-monolith-with-ddd-fe-react/src/meetings/my-meeting-groups/create-meeting-group.tsx"],"names":["useState","useEffect","React","HttpClient","CreateMeetingGroup","name","setName","description","setDescription","city","setCity","countryCode","setCountryCode","isProposalSent","setIsProposalSent","countries","setCountries","loadCountries","get","then","response","handleNameChange","event","target","value","handleDescriptionChange","handleCityChange","handleSubmit","request","locationCity","locationCountryCode","post","JSON","stringify","catch","_","preventDefault","handleCountryChange","map","item","code"],"mappings":"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","sourcesContent":["import { FormEvent, useState, ChangeEvent, useEffect } from 'react';\nimport React from 'react';\nimport { HttpClient } from '../../shared/http-client';\n\nexport default interface ProposeMeetingGroupRequest {\n    name: string,\n    description: string,\n    locationCity: string,\n    locationCountryCode: string\n}\n\ninterface Country {\n    name: string,\n    code: string\n}\n\nexport function CreateMeetingGroup() {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [city, setCity] = useState('');\n    const [countryCode, setCountryCode] = useState('PL');\n    const [isProposalSent, setIsProposalSent] = useState(false);\n    const [countries, setCountries] = useState<Array<Country>>([]);\n\n\n    useEffect(() => {\n        loadCountries();\n    }, []);\n\n    function loadCountries() {\n        HttpClient.get<Array<Country>>('api/meetings/countries')\n            .then(response => setCountries(response));\n    }\n\n    function handleNameChange(event: ChangeEvent<HTMLInputElement>) {\n        setName(event.target.value);\n    }\n\n    function handleDescriptionChange(event: ChangeEvent<HTMLInputElement>) {\n        setDescription(event.target.value);\n    }\n\n    function handleCityChange(event: ChangeEvent<HTMLInputElement>) {\n        setCity(event.target.value);\n    }\n\n    function handleSubmit(event: FormEvent<HTMLFormElement>) {\n        const request: ProposeMeetingGroupRequest = {\n            locationCity: city,\n            locationCountryCode: countryCode,\n            description: description,\n            name: name\n        }\n\n        HttpClient.post<any>('api/meetings/MeetingGroupProposals', JSON.stringify(request))\n            .then(() => setIsProposalSent(true))\n            .catch(_ => { });\n\n        event.preventDefault();\n    }\n\n    function handleCountryChange(event: ChangeEvent<HTMLSelectElement>) {\n        setCountryCode(event.target.value);\n    }\n\n    return (\n        <div className=\"container\">\n            Create Meeting group\n            \n            {!isProposalSent && \n            <form onSubmit={handleSubmit}>\n                <div>\n                    <div>Name: </div><div><input type=\"text\" value={name} onChange={handleNameChange} /></div>\n                    <div>Description: </div><div><input type=\"textarea\" value={description} onChange={handleDescriptionChange} /></div>\n                    <div>City: </div><div><input type=\"text\" value={city} onChange={handleCityChange} /></div>\n                    <div>Country: </div>\n                    <div>\n                        <select name=\"Country\" \n                        onChange={handleCountryChange} \n                        onLoadedData={handleCountryChange} \n                        value={countryCode}>\n                            {countries.map(item =>\n                                <option label={item.name} value={item.code}></option>)}\n                        </select>\n                    </div>\n                    <div><input type=\"submit\" value=\"Send Proposal\" /></div>\n                </div>\n            </form>\n            }\n\n            {isProposalSent &&\n                <div>Proposal sent</div>\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}